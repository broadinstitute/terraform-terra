pipeline {
  agent {
    // Until we get the correct vault policy on all nodes
    label 'node220'
  }
  triggers {
    // Trigger weekly
    cron('H H H H 1')
  }
  stages {
    stage ('Init'){
      steps {
        script {
          currentBuild.displayName = "update-jenkins-ips"
          currentBuild.description = "Look up the current IPs of Jenkins slaves and put them in Vault"
        }
      }
    }
    stage ('Get Jenkins slave IPs'){
      steps {
        script {
          sh "gcloud compute --project broad-dsp-techops instances list --filter=tags:jenkins-slave --format='json' | jq '.[].networkInterfaces[0].accessConfigs[0].natIP + \"/32\"' | jq --slurp '{\"ips\": .}' > ips.json"
        }
      }
    }
    stage ('Update Vault secret'){
      steps {
        script {
          sh '''
            set +x
            docker run --rm --cap-add IPC_LOCK -e "VAULT_TOKEN=$(cat /etc/dsde-read-ephemeral-write)" -e "VAULT_ADDR=https://clotho.broadinstitute.org:8200" -v \$(pwd):/working vault:1.1.0 write secret/dsde/firecloud/ephemeral/common/jenkins-ips @/working/ips.json
          '''
        }
      }
    }
  }
  post {
    always {
      cleanWs()
    }
    failure {
      slackSend (
        color: '#FF0000',
        message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"),
        channel: '#slack-test'
      )
    }
    success {
      slackSend (
        color: '#FF0000',
        message: "PASSED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"),
        channel: '#slack-test'
      )
    }
  }
}
