pipeline {
  parameters {
    string(
      name: 'json',
      description: 'Parameter JSON file to use',
      defaultValue: 'broad-wb-malkov.json',
      trim: true
    )
    string(
      name: 'profile',
      description: 'Name of profile to deploy',
      trim: true
    )
    string(
      name: 'branch',
      description: 'Branch of terraform-terra to use',
      defaultValue: 'master',
      trim: true
    )
    choice(
      name: 'action',
      choices: ['deploy', 'teardown'],
      description: 'Action to perform'
    )
  }
  agent {
    // Until we get the correct vault policy on all nodes
    label 'node220'
  }
  stages {
    stage ('checkout scm'){
      steps {
        // GIT submodule recursive checkout
        checkout scm: [
          $class: 'GitSCM',
          branches: [[
            $class: 'BranchSpec',
            name: params.branch
          ]],
          doGenerateSubmoduleConfigurations: false,
          extensions: [[
            $class: 'SubmoduleOption',
            disableSubmodules: false,
            parentCredentials: true,
            recursiveSubmodules: true,
            reference: '',
            trackingSubmodules: false
          ]],
          submoduleCfg: [],
          userRemoteConfigs: [[
            $class: 'UserRemoteConfig',
            url: 'git@github.com:broadinstitute/terraform-terra.git'
          ]]
        ]
      }
    }
    stage ('deploy'){
      steps {
        script {
          sh "./dsp-k8s-deploy/application-${params.action}.sh -j ${params.json} -p ${params.profile} -v /etc/dsde-read-ephemeral-write -f"
        }
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
